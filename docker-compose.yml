version: '3.7'

services:
    traefik:
        image: traefik
        container_name: traefik
        restart: always
        hostname: traefik
        domainname: ${DOMAINNAME}
        networks:
          - default
          - traefik_proxy
        ports:
          - 80:80
          - 443:443
          - 8080:8080
        labels:
          - "traefik.enable=true"
          - "traefik.backend=traefik"
          - "traefik.frontend.rule=Host:traefik.${DOMAINNAME}"
          - "traefik.port=8080"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock:ro
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - traefik:/etc/traefik
          - traefiktmp:/tmp
        environment:
          - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
          - CF_API_KEY=${CLOUDFLARE_API_KEY}

    vpn:
        image: dperson/openvpn-client
        container_name: vpn
        restart: always
        hostname: vpn
        extra_hosts:
          - "qbittorrent.${DOMAINNAME}:${DOCKERHOSTIP}"
          - "jackett.${DOMAINNAME}:${DOCKERHOSTIP}"
          - "hydra2.${DOMAINNAME}:${DOCKERHOSTIP}"
          - "sabnzbd.${DOMAINNAME}:${DOCKERHOSTIP}"
          - "sonarr.${DOMAINNAME}:${DOCKERHOSTIP}"
          - "radarr.${DOMAINNAME}:${DOCKERHOSTIP}"
          - "bazarr.${DOMAINNAME}:${DOCKERHOSTIP}"
        cap_add:
          - NET_ADMIN
        networks:
          - default
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - vpn:/vpn
          - /dev/net:/dev/net:z
        environment:
          - PGID=${PGID}
          - PUID=${PUID}
          - TZ=${TZ}
        working_dir: "/vpn"
        dns:
          - ${VPNDNS}
        command: -f ""

    qbittorrent:
        image: linuxserver/qbittorrent
        container_name: qbittorrent
        restart: always
        depends_on:
          - vpn
        network_mode: "service:vpn"
        labels:
          - "traefik.enable=true"
          - "traefik.backend=qbittorrent"
          - "traefik.frontend.rule=Host:qbittorrent.${DOMAINNAME}"
          - "traefik.port=8091"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - qbittorrent:/config
          - nicememe:/downloads
        environment:
          - PGID=${PGID}
          - PUID=${PUID}
          - TZ=${TZ}
          - WEBUI_PORT=8091

    jackett:
        image: linuxserver/jackett
        container_name: jackett
        restart: always
        depends_on:
          - vpn
        network_mode: "service:vpn"
        labels:
          - "traefik.enable=true"
          - "traefik.backend=jackett"
          - "traefik.frontend.rule=Host:jackett.${DOMAINNAME}"
          - "traefik.port=9117"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - jackett:/config
          - nicememe:/downloads
        environment:
          - PGID=${PGID}
          - PUID=${PUID}
          - TZ=${TZ}

    hydra2:
        image: linuxserver/hydra2
        container_name: hydra2
        restart: always
        depends_on:
          - vpn
        network_mode: "service:vpn"
        labels:
          - "traefik.enable=true"
          - "traefik.backend=hydra2"
          - "traefik.frontend.rule=Host:hydra2.${DOMAINNAME}"
          - "traefik.port=5076"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - hydra2:/config
          - nicememe:/downloads
        environment:
          - PGID=${PGID}
          - PUID=${PUID}
          - TZ=${TZ}

    sabnzbd:
        image: linuxserver/sabnzbd
        container_name: sabnzbd
        restart: always
        hostname: sabnzbd
        networks:
          - traefik_proxy
        labels:
          - "traefik.enable=true"
          - "traefik.backend=sabnzbd"
          - "traefik.frontend.rule=Host:sabnzbd.${DOMAINNAME}"
          - "traefik.port=8080"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - sabnzbd:/config
          - nicememe:/downloads
          - nicememe:/incomplete-downloads
        environment:
          - PGID=${PGID}
          - PUID=${PUID}
          - TZ=${TZ}

    sonarr:
        image: linuxserver/sonarr:preview
        container_name: sonarr
        restart: always
        depends_on:
          - vpn
        network_mode: "service:vpn"
        labels:
          - "traefik.enable=true"
          - "traefik.backend=sonarr"
          - "traefik.frontend.rule=Host:sonarr.${DOMAINNAME}"
          - "traefik.port=8989"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - sonarr:/config
          - nicememe:/downloads
          - tv:/tv
          - anime:/anime
        environment:
          - PGID=${PGID}
          - PUID=${PUID}
          - TZ=${TZ}

    radarr:
        image: linuxserver/radarr
        container_name: radarr
        restart: always
        depends_on:
          - vpn
        network_mode: "service:vpn"
        labels:
          - "traefik.enable=true"
          - "traefik.backend=radarr"
          - "traefik.frontend.rule=Host:radarr.${DOMAINNAME}"
          - "traefik.port=7878"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - radarr:/config
          - nicememe:/downloads
          - movies:/movies
        environment:
          - PGID=${PGID}
          - PUID=${PUID}
          - TZ=${TZ}

    bazarr:
        image: linuxserver/bazarr
        container_name: bazarr
        restart: always
        depends_on:
          - vpn
        network_mode: "service:vpn"
        labels:
          - "traefik.enable=true"
          - "traefik.backend=bazarr"
          - "traefik.frontend.rule=Host:bazarr.${DOMAINNAME}"
          - "traefik.port=6767"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - bazarr:/config
          - movies:/hehe/Film
          - anime:/hehe/Anime
          - tv:/tv
          - movies:/movies
        environment:
          - PGID=${PGID}
          - PUID=${PUID}
          - TZ=${TZ}

    ombi:
        image: linuxserver/ombi
        container_name: ombi
        restart: always
        hostname: ombi
        networks:
          - traefik_proxy
        labels:
          - "traefik.enable=true"
          - "traefik.backend=ombi"
          - "traefik.frontend.rule=Host:oombi.${DOMAINNAME}"
          - "traefik.port=3579"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - ombi:/config
        environment:
          - PGID=${PGID}
          - PUID=${PUID}
          - TZ=${TZ}

    tautulli:
        image: linuxserver/tautulli
        container_name: tautulli
        restart: always
        hostname: tautulli
        networks:
          - traefik_proxy
        labels:
          - "traefik.enable=true"
          - "traefik.backend=tautulli"
          - "traefik.frontend.rule=Host:tautulli.${DOMAINNAME}"
          - "traefik.port=8181"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - tautulli:/config
          - tautulli:/logs
        environment:
          - PGID=${PGID}
          - PUID=${PUID}
          - TZ=${TZ}

    duplicati:
        image: linuxserver/duplicati
        container_name: duplicati
        restart: always
        hostname: duplicati
        networks:
          - traefik_proxy
        labels:
          - "traefik.enable=true"
          - "traefik.backend=duplicati"
          - "traefik.frontend.rule=Host:duplicati.${DOMAINNAME}"
          - "traefik.port=8200"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - duplicati:/config
          - duplicatilocal:/backups
          - /data/config:/source:ro
        environment:
          - PGID=${PGID}
          - PUID=${PUID}
          - TZ=${TZ}

    grafana:
        image: grafana/grafana
        container_name: grafana
        restart: always
        hostname: grafana
        networks:
          - traefik_proxy
        labels:
          - "traefik.enable=true"
          - "traefik.backend=grafana"
          - "traefik.frontend.rule=Host:grafana.${DOMAINNAME}"
          - "traefik.port=3000"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - grafana:/var/lib/grafana
        environment:
          - PGID=${PGID}
          - PUID=${PUID}
          - TZ=${TZ}
          - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel

    chronograf:
        image: chronograf
        container_name: chronograf
        restart: always
        hostname: chronograf
        networks:
          - traefik_proxy
        labels:
          - "traefik.enable=true"
          - "traefik.backend=chronograf"
          - "traefik.frontend.rule=Host:chronograf.${DOMAINNAME}"
          - "traefik.port=8888"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - chronograf:/var/lib/chronograf
        environment:
          - PGID=${PGID}
          - PUID=${PUID}
          - TZ=${TZ}

    portainer:
        image: portainer/portainer
        container_name: portainer
        restart: always
        hostname: portainer
        labels:
          - "traefik.enable=true"
          - "traefik.backend=portainer"
          - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"
          - "traefik.port=9000"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - portainer:/data
        command: -H unix:///var/run/docker.sock

    gotify:
        image: gotify/server
        container_name: gotify
        restart: always
        hostname: gotify
        labels:
          - "traefik.enable=true"
          - "traefik.backend=gotify"
          - "traefik.frontend.rule=Host:gootify.${DOMAINNAME}"
          - "traefik.port=80"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - gotify:/app/data
        environment:
          - PGID=${PGID}
          - PUID=${PUID}
          - TZ=${TZ}

    organizr:
        image: organizrtools/organizr-v2
        container_name: organizr
        restart: always
        hostname: organizr
        labels:
          - "traefik.enable=true"
          - "traefik.backend=organizr"
          - "traefik.frontend.rule=Host:organizr.${DOMAINNAME}"
          - "traefik.port=80"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - organizr:/config
        environment:
          - PGID=${PGID}
          - PUID=${PUID}
          - TZ=${TZ}

    ouroboros:
        image: pyouroboros/ouroboros
        container_name: ouroboros
        restart: always
        hostname: ouroboros
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
        environment:
          - CLEANUP=true
          - SELF_UPDATE=true
        command: -N ${OUROBOROSNOTIFICATION}

    influxdb:
        image: influxdb
        container_name: influxdb
        restart: always
        hostname: pepega
        ports:
          - 8083:8083
          - 8086:8086
          - 8090:8090
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock:ro
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - influxdb:/var/lib/influxdb
        environment:
          - PGID=${PGID}
          - PUID=${PUID}
          - TZ=${TZ}

    telegraf:
        image: telegraf
        container_name: telegraf
        restart: always
        hostname: telegraf
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock:ro
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - /data/config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
          - /etc:/rootfs/etc:ro
          - /proc:/rootfs/proc:ro
          - /sys:/rootfs/sys:ro
        environment:
          - PGID=${PGID}
          - PUID=${PUID}
          - TZ=${TZ}
          - HOST_ETC=/rootfs/etc
          - HOST_PROC=/rootfs/proc
          - HOST_SYS=/rootfs/sys

    varken:
        image: boerderij/varken
        container_name: varken
        restart: always
        hostname: varken
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - scripts:/scripts:ro
          - varken:/config
        environment:
          - PGID=${PGID}
          - PUID=${PUID}
          - TZ=${TZ}

networks:
    traefik_proxy:
        external:
            name: traefik_proxy
    default:
        driver: bridge

volumes:
    traefik:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/traefik
    traefiktmp:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/traefiktmp
    vpn:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/vpn
    qbittorrent:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/qbittorrent
    jackett:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/jackett
    hydra2:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/hydra2
    sabnzbd:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/sabnzbd
    sonarr:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/sonarr
    radarr:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/radarr
    bazarr:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/bazarr
    ombi:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/ombi
    tautulli:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/tautulli
    duplicati:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/duplicati
    grafana:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/grafana
    chronograf:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/chronograf
    portainer:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/portainer
    gotify:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/gotify
    organizr:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/organizr
    influxdb:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/influxdb
    varken:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/varken
    nicememe:
        driver: local-persist
        driver_opts:
            mountpoint: ${NICEMEME}
    scripts:
        driver: local-persist
        driver_opts:
            mountpoint: ${SCRIPTS}
    tv:
        driver: local-persist
        driver_opts:
            mountpoint: ${TV}
    anime:
        driver: local-persist
        driver_opts:
            mountpoint: ${ANIME}
    movies:
        driver: local-persist
        driver_opts:
            mountpoint: ${MOVIES}
    duplicatilocal:
        driver: local-persist
        driver_opts:
            mountpoint: ${DUPLICATI}