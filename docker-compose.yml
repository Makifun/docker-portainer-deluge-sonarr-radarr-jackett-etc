version: '3'

services:
    traefik:
        image: traefik:latest
        container_name: traefik
        hostname: traefik
        restart: always
        domainname: ${DOMAINNAME}
        networks:
          - default
          - traefik_proxy
        ports:
          - "80:80"
          - "443:443"
          - "8080:8080"
        labels:
          - "traefik.enable=true"
          - "traefik.backend=traefik"
          - "traefik.frontend.rule=Host:traefik.${DOMAINNAME}"
          - "traefik.port=8080"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock:ro
          - scripts:/scripts:ro
          - /etc/localtime:/etc/localtime:ro
          - traefik:/etc/traefik
        environment:
          - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
          - CF_API_KEY=${CLOUDFLARE_API_KEY}

    hydra2:
        image: linuxserver/hydra2
        container_name: hydra2
        hostname: hydra2
        restart: always
        networks:
          - traefik_proxy
        labels:
          - "traefik.enable=true"
          - "traefik.backend=hydra2"
          - "traefik.frontend.rule=Host:hydra2.${DOMAINNAME}"
          - "traefik.port=5076"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
            - scripts:/scripts:ro
            - /etc/localtime:/etc/localtime:ro
            - hydra2:/config
            - nicememe:/downloads
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}

    sabnzbd:
        image: linuxserver/sabnzbd
        container_name: sabnzbd
        hostname: sabnzbd
        restart: always
        networks:
          - traefik_proxy
        labels:
          - "traefik.enable=true"
          - "traefik.backend=sabnzbd"
          - "traefik.frontend.rule=Host:sabnzbd.${DOMAINNAME}"
          - "traefik.port=8080"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
            - scripts:/scripts:ro
            - /etc/localtime:/etc/localtime:ro
            - sabnzbd:/config
            - nicememe:/downloads
            - nicememe:/incomplete-downloads
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}

    sonarr:
        image: linuxserver/sonarr:preview
        container_name: sonarr
        hostname: sonarr
        restart: always
        networks:
          - traefik_proxy
        labels:
          - "traefik.enable=true"
          - "traefik.backend=sonarr"
          - "traefik.frontend.rule=Host:sonarr.${DOMAINNAME}"
          - "traefik.port=8989"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
            - scripts:/scripts:ro
            - /etc/localtime:/etc/localtime:ro
            - sonarr:/config
            - nicememe:/downloads
            - tv:/tv
            - anime:/anime
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}

    radarr:
        image: linuxserver/radarr
        container_name: radarr
        hostname: radarr
        restart: always
        networks:
          - traefik_proxy
        labels:
          - "traefik.enable=true"
          - "traefik.backend=radarr"
          - "traefik.frontend.rule=Host:radarr.${DOMAINNAME}"
          - "traefik.port=7878"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
            - scripts:/scripts:ro
            - /etc/localtime:/etc/localtime:ro
            - radarr:/config
            - nicememe:/downloads
            - movies:/hehe/Film
            - asian:/hehe/Asian
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}

    bazarr:
        image: linuxserver/bazarr
        container_name: bazarr
        hostname: bazarr
        restart: always
        networks:
          - traefik_proxy
        labels:
          - "traefik.enable=true"
          - "traefik.backend=bazarr"
          - "traefik.frontend.rule=Host:bazarr.${DOMAINNAME}"
          - "traefik.port=6767"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
            - scripts:/scripts:ro
            - /etc/localtime:/etc/localtime:ro
            - bazarr:/config
            - movies:/hehe/Film
            - asian:/hehe/Asian
            - anime:/hehe/Anime
            - tv:/tv
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}

    ombi:
        image: linuxserver/ombi
        container_name: ombi
        hostname: ombi
        restart: always
        networks:
          - traefik_proxy
        labels:
          - "traefik.enable=true"
          - "traefik.backend=ombi"
          - "traefik.frontend.rule=Host:oombi.${DOMAINNAME}"
          - "traefik.port=3579"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
            - scripts:/scripts:ro
            - /etc/localtime:/etc/localtime:ro
            - ombi:/config
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}

    tautulli:
        image: linuxserver/tautulli
        container_name: tautulli
        hostname: tautulli
        restart: always
        networks:
          - traefik_proxy
        labels:
          - "traefik.enable=true"
          - "traefik.backend=tautulli"
          - "traefik.frontend.rule=Host:tautulli.${DOMAINNAME}"
          - "traefik.port=8181"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
            - scripts:/scripts:ro
            - /etc/localtime:/etc/localtime:ro
            - tautulli:/config
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}

    duplicati:
        image: linuxserver/duplicati
        container_name: duplicati
        hostname: duplicati
        restart: always
        networks:
          - traefik_proxy
        labels:
          - "traefik.enable=true"
          - "traefik.backend=duplicati"
          - "traefik.frontend.rule=Host:duplicati.${DOMAINNAME}"
          - "traefik.port=8200"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
            - scripts:/scripts:ro
            - /etc/localtime:/etc/localtime:ro
            - duplicati:/config
            - duplicatilocal:/backups
            - /data/config:/source:ro
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}

    grafana:
        image: grafana/grafana
        container_name: grafana
        hostname: grafana
        restart: always
        networks:
          - traefik_proxy
        labels:
          - "traefik.enable=true"
          - "traefik.backend=grafana"
          - "traefik.frontend.rule=Host:grafana.${DOMAINNAME}"
          - "traefik.port=3000"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
            - scripts:/scripts:ro
            - /etc/localtime:/etc/localtime:ro
            - grafana:/var/lib/grafana
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
            - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel

    chronograf:
        image: chronograf
        container_name: chronograf
        hostname: chronograf
        restart: always
        networks:
          - traefik_proxy
        labels:
          - "traefik.enable=true"
          - "traefik.backend=chronograf"
          - "traefik.frontend.rule=Host:chronograf.${DOMAINNAME}"
          - "traefik.port=8888"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
            - scripts:/scripts:ro
            - /etc/localtime:/etc/localtime:ro
            - chronograf:/var/lib/chronograf
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}

    portainer:
        image: portainer/portainer
        container_name: portainer
        hostname: portainer
        restart: always
        labels:
          - "traefik.enable=true"
          - "traefik.backend=portainer"
          - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"
          - "traefik.port=9000"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - scripts:/scripts:ro
            - /etc/localtime:/etc/localtime:ro
            - portainer:/data
        command: -H unix:///var/run/docker.sock

    gotify:
        image: gotify/server
        container_name: gotify
        hostname: gotify
        restart: always
        labels:
          - "traefik.enable=true"
          - "traefik.backend=gotify"
          - "traefik.frontend.rule=Host:gootify.${DOMAINNAME}"
          - "traefik.port=80"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
            - scripts:/scripts:ro
            - /etc/localtime:/etc/localtime:ro
            - gotify:/app/data
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}

    organizr:
        image: organizrtools/organizr-v2
        container_name: organizr
        hostname: organizr
        restart: always
        labels:
          - "traefik.enable=true"
          - "traefik.backend=organizr"
          - "traefik.frontend.rule=Host:organizr.${DOMAINNAME}"
          - "traefik.port=80"
          - "traefik.docker.network=traefik_proxy"
          - "traefik.frontend.headers.SSLRedirect=true"
          - "traefik.frontend.headers.STSSeconds=315360000"
          - "traefik.frontend.headers.browserXSSFilter=true"
          - "traefik.frontend.headers.contentTypeNosniff=true"
          - "traefik.frontend.headers.forceSTSHeader=true"
          - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
          - "traefik.frontend.headers.STSIncludeSubdomains=true"
          - "traefik.frontend.headers.STSPreload=true"
          - "traefik.frontend.headers.frameDeny=true"
          - "traefik.frontend.headers.customFrameOptionsValue=allow-from ${ORGANIZRDOMAIN}"
          - "traefik.frontend.passHostHeader=true"
        volumes:
            - scripts:/scripts:ro
            - /etc/localtime:/etc/localtime:ro
            - organizr:/config
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}

    ouroboros:
        image: pyouroboros/ouroboros
        container_name: ouroboros
        hostname: ouroboros
        restart: always
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - scripts:/scripts:ro
            - /etc/localtime:/etc/localtime:ro
        environment:
            - CLEANUP=true
            - SELF_UPDATE=true
        command: -N ${OUROBOROSNOTIFICATION}

    influxdb:
        image: influxdb
        container_name: influxdb
        hostname: pepega
        restart: always
        ports:
            - 8083:8083
            - 8086:8086
            - 8090:8090
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - scripts:/scripts:ro
            - /etc/localtime:/etc/localtime:ro
            - influxdb:/var/lib/influxdb
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}

    telegraf:
        image: telegraf
        container_name: telegraf
        hostname: telegraf
        restart: always
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - scripts:/scripts:ro
            - /etc/localtime:/etc/localtime:ro
            - /data/config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
            - /etc:/rootfs/etc:ro
            - /proc:/rootfs/proc:ro
            - /sys:/rootfs/sys:ro
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
            - HOST_ETC=/rootfs/etc
            - HOST_PROC=/rootfs/proc
            - HOST_SYS=/rootfs/sys

    varken:
        image: boerderij/varken
        container_name: varken
        hostname: varken
        restart: always
        volumes:
            - scripts:/scripts:ro
            - /etc/localtime:/etc/localtime:ro
            - varken:/config
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}

networks:
    traefik_proxy:
        external:
            name: traefik_proxy
    default:
        driver: bridge

volumes:
    traefik:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/traefik
    hydra2:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/hydra2
    sabnzbd:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/sabnzbd
    sonarr:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/sonarr
    radarr:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/radarr
    bazarr:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/bazarr
    ombi:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/ombi
    tautulli:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/tautulli
    duplicati:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/duplicati
    grafana:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/grafana
    chronograf:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/chronograf
    portainer:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/portainer
    gotify:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/gotify
    organizr:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/organizr
    influxdb:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/influxdb
    varken:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/varken
    nicememe:
        driver: local-persist
        driver_opts:
            mountpoint: /home/turd/nicememe
    scripts:
        driver: local-persist
        driver_opts:
            mountpoint: /home/turd/scripts
    tv:
        driver: local-persist
        driver_opts:
            mountpoint: /home/turd/hehe/Serie
    anime:
        driver: local-persist
        driver_opts:
            mountpoint: /home/turd/hehe/Anime
    movies:
        driver: local-persist
        driver_opts:
            mountpoint: /home/turd/hehe/Film
    asian:
        driver: local-persist
        driver_opts:
            mountpoint: /home/turd/hehe/Asian
    duplicatilocal:
        driver: local-persist
        driver_opts:
            mountpoint: /home/turd/duplicatilocal